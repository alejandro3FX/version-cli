trigger:
    branches:
      include:        
        - main
  
pool:
  vmImage: "ubuntu-latest"

steps:

 
    
  - task: gitversion/setup@0
    inputs:
      versionSpec: '5.1'
      includePrerelease: true
    displayName : "Configurando gitversion"

  - task: gitversion/execute@0
    inputs:
      useConfigFile: true
      configFilePath: "deploy/gitConfig.yml" 
    displayName: "generando la nueva versi√≥n"
  
  - task: DotNetCoreCLI@2
    inputs:
      command: 'restore'
      projects: '**/*.csproj'
      feedsToUse: 'select'
      vstsFeed: '0e468e6a-c444-43d7-95e1-61f36d80dbd2/02e7cc4e-a132-4f42-bf59-4cf10b26ee43'


  - task: DotNetCoreCLI@2
    displayName: "dotnet pack"
    inputs:
      command: 'pack'
      packagesToPack: ''
      nobuild: true
      packDirectory: '$(Build.ArtifactStagingDirectory)'
      versionEnvVar: '${NuGetVersion}'
    
  
 
      
  - task: CmdLine@2
    inputs:
      script: 'ls'
      workingDirectory: '$(Build.ArtifactStagingDirectory)'
    displayName: "test"


 
  
 # - task: CopyFiles@2
 #   inputs:
 #     sourceFolder: "build"
 #     contents: "**"
 #     targetFolder: $(Build.ArtifactStagingDirectory)
 #   displayName: "Copy Build"

 # - task: PublishBuildArtifacts@1
 #   inputs:
 #     pathtoPublish: "$(Build.ArtifactStagingDirectory)"
 #     artifactName: drop
 #     publishLocation: 'container'
 #   displayName: "Publish npm artifact"