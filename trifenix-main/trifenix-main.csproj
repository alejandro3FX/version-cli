<Project Sdk="Microsoft.NET.Sdk">

  <ItemGroup>
    <ProjectReference PrivateAssets="all" Include="..\trifenix-side\trifenix-side.csproj" />
    
  </ItemGroup>

  <ItemGroup>
    <None Include="images\logo.png" Pack="true" PackagePath=""/>
  </ItemGroup>


  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>    
    <PackageIcon>logo.png</PackageIcon>
    <Company>Trifenix</Company>
    <Product>Nuget Cli Example</Product>
    <PackageTags>trifenix nuget open-source education training</PackageTags>
    <RootNamespace>trifenix_main</RootNamespace>
    <RepositoryUrl>https://github.com/trifenix/nuget-cli-example-lib</RepositoryUrl> 
    <id>main.test</id>    
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <title>Libreria Main Trifenix</title>
    <authors>Trifenix</authors>
    <owners>trifenix</owners>
    <projectUrl>https://www.trifenix.io</projectUrl>
    <iconUrl>https://nuget-cli-example.trifenix.io</iconUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description> de ejemplo de integración continua con devops, docfx : https://nuget-cli-example.trifenix.io</description>
    <releaseNotes>Initial 0.0.1 release</releaseNotes>
    <copyright>Copyright 2018 CompanyLtd</copyright>
    <IsPackable>true</IsPackable>
    <tags>sample nuget</tags>
    <dependencies>
      <!--<dependency id="bootstrap" version="4.1.1" />
          <dependency id="FontAwesome" version="4.7.0" />-->
    </dependencies>
    <PackageType>Dependency</PackageType>
    <summary> Paquete de ejemplo de integración continua con devops, docfx : https://nuget-cli-example.trifenix.io </summary>
    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage
    </TargetsForTfmSpecificBuildOutput>
    <DocumentationFile>main.xml</DocumentationFile>
  </PropertyGroup>

  <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="BuildOnlySettings;ResolveReferences">
    <ItemGroup>
      <!-- Filter out unnecessary files -->
      <_ReferenceCopyLocalPaths
        Include="@(ReferenceCopyLocalPaths->WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')->WithMetadataValue('PrivateAssets', 'All'))" />
      
    </ItemGroup>

    <!-- Print batches for debug purposes -->
    <Message
      Text="Batch for .nupkg: ReferenceCopyLocalPaths = @(_ReferenceCopyLocalPaths), ReferenceCopyLocalPaths.DestinationSubDirectory = %(_ReferenceCopyLocalPaths.DestinationSubDirectory) Filename = %(_ReferenceCopyLocalPaths.Filename) Extension = %(_ReferenceCopyLocalPaths.Extension)"
      Importance="High" Condition="'@(_ReferenceCopyLocalPaths)' != ''" />

    <ItemGroup>
      <!-- Add file to package with consideration of sub folder. If empty, the root folder is chosen. -->
      <BuildOutputInPackage Include="@(_ReferenceCopyLocalPaths)"
        TargetPath="%(_ReferenceCopyLocalPaths.DestinationSubDirectory)" />
    </ItemGroup>
  </Target>
</Project>
